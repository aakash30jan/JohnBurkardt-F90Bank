 3 January 2014  12:09:13.686 PM
 
HYPERBALL_VOLUME_QUAD
  FORTRAN90 version
  Use a quadrature rule, applied to the M-dimensional
  hypercube, to estimate the volume of the 
  M-dimensional unit hyperball.
 
  We are integrating the function f(x), where f(x) is
  * 1 inside the hyperball;
  * 0 outside the hyperball.
 
  The function f(x) is discontinuous.  That suggests that
  as we use "better" and "better" quadrature rules, the
  volume estimate will actually get worse and worse.
 
  The user supplies the quadrature rule using three files,
  called the "R", "W" and "X" files:
  * the Mx2 R file contains the hyperrectangle of definition;
  * the Nx1 W file contains the weights.
  * the MxN X file contains the points.
 
User input:
  Quadrature rule X file = "cc_d6_level0_x.txt".
  Quadrature rule W file = "cc_d6_level0_w.txt".
  Quadrature rule R file = "cc_d6_level0_r.txt".
 
  Spatial dimension =        6
  Number of points  =        1
 
         N    Estimate           Exact         Error
 
         1     4.00000         5.16771       1.16771    
 
HYPERBALL_VOLUME_QUAD:
  Normal end of execution.
 
 3 January 2014  12:09:13.687 PM
 3 January 2014  12:09:13.690 PM
 
HYPERBALL_VOLUME_QUAD
  FORTRAN90 version
  Use a quadrature rule, applied to the M-dimensional
  hypercube, to estimate the volume of the 
  M-dimensional unit hyperball.
 
  We are integrating the function f(x), where f(x) is
  * 1 inside the hyperball;
  * 0 outside the hyperball.
 
  The function f(x) is discontinuous.  That suggests that
  as we use "better" and "better" quadrature rules, the
  volume estimate will actually get worse and worse.
 
  The user supplies the quadrature rule using three files,
  called the "R", "W" and "X" files:
  * the Mx2 R file contains the hyperrectangle of definition;
  * the Nx1 W file contains the weights.
  * the MxN X file contains the points.
 
User input:
  Quadrature rule X file = "cc_d6_level1_x.txt".
  Quadrature rule W file = "cc_d6_level1_w.txt".
  Quadrature rule R file = "cc_d6_level1_r.txt".
 
  Spatial dimension =        6
  Number of points  =       13
 
         N    Estimate           Exact         Error
 
        13     64.0000         5.16771       58.8323    
 
HYPERBALL_VOLUME_QUAD:
  Normal end of execution.
 
 3 January 2014  12:09:13.690 PM
 3 January 2014  12:09:13.693 PM
 
HYPERBALL_VOLUME_QUAD
  FORTRAN90 version
  Use a quadrature rule, applied to the M-dimensional
  hypercube, to estimate the volume of the 
  M-dimensional unit hyperball.
 
  We are integrating the function f(x), where f(x) is
  * 1 inside the hyperball;
  * 0 outside the hyperball.
 
  The function f(x) is discontinuous.  That suggests that
  as we use "better" and "better" quadrature rules, the
  volume estimate will actually get worse and worse.
 
  The user supplies the quadrature rule using three files,
  called the "R", "W" and "X" files:
  * the Mx2 R file contains the hyperrectangle of definition;
  * the Nx1 W file contains the weights.
  * the MxN X file contains the points.
 
User input:
  Quadrature rule X file = "cc_d6_level2_x.txt".
  Quadrature rule W file = "cc_d6_level2_w.txt".
  Quadrature rule R file = "cc_d6_level2_r.txt".
 
  Spatial dimension =        6
  Number of points  =       85
 
         N    Estimate           Exact         Error
 
        85    -42.6667         5.16771       47.8344    
 
HYPERBALL_VOLUME_QUAD:
  Normal end of execution.
 
 3 January 2014  12:09:13.695 PM
 3 January 2014  12:09:13.697 PM
 
HYPERBALL_VOLUME_QUAD
  FORTRAN90 version
  Use a quadrature rule, applied to the M-dimensional
  hypercube, to estimate the volume of the 
  M-dimensional unit hyperball.
 
  We are integrating the function f(x), where f(x) is
  * 1 inside the hyperball;
  * 0 outside the hyperball.
 
  The function f(x) is discontinuous.  That suggests that
  as we use "better" and "better" quadrature rules, the
  volume estimate will actually get worse and worse.
 
  The user supplies the quadrature rule using three files,
  called the "R", "W" and "X" files:
  * the Mx2 R file contains the hyperrectangle of definition;
  * the Nx1 W file contains the weights.
  * the MxN X file contains the points.
 
User input:
  Quadrature rule X file = "cc_d6_level3_x.txt".
  Quadrature rule W file = "cc_d6_level3_w.txt".
  Quadrature rule R file = "cc_d6_level3_r.txt".
 
  Spatial dimension =        6
  Number of points  =      389
 
         N    Estimate           Exact         Error
 
       389    -118.519         5.16771       123.686    
 
HYPERBALL_VOLUME_QUAD:
  Normal end of execution.
 
 3 January 2014  12:09:13.703 PM
 3 January 2014  12:09:13.706 PM
 
HYPERBALL_VOLUME_QUAD
  FORTRAN90 version
  Use a quadrature rule, applied to the M-dimensional
  hypercube, to estimate the volume of the 
  M-dimensional unit hyperball.
 
  We are integrating the function f(x), where f(x) is
  * 1 inside the hyperball;
  * 0 outside the hyperball.
 
  The function f(x) is discontinuous.  That suggests that
  as we use "better" and "better" quadrature rules, the
  volume estimate will actually get worse and worse.
 
  The user supplies the quadrature rule using three files,
  called the "R", "W" and "X" files:
  * the Mx2 R file contains the hyperrectangle of definition;
  * the Nx1 W file contains the weights.
  * the MxN X file contains the points.
 
User input:
  Quadrature rule X file = "cc_d6_level4_x.txt".
  Quadrature rule W file = "cc_d6_level4_w.txt".
  Quadrature rule R file = "cc_d6_level4_r.txt".
 
  Spatial dimension =        6
  Number of points  =     1457
 
         N    Estimate           Exact         Error
 
      1457     148.250         5.16771       143.082    
 
HYPERBALL_VOLUME_QUAD:
  Normal end of execution.
 
 3 January 2014  12:09:13.727 PM
 3 January 2014  12:09:13.730 PM
 
HYPERBALL_VOLUME_QUAD
  FORTRAN90 version
  Use a quadrature rule, applied to the M-dimensional
  hypercube, to estimate the volume of the 
  M-dimensional unit hyperball.
 
  We are integrating the function f(x), where f(x) is
  * 1 inside the hyperball;
  * 0 outside the hyperball.
 
  The function f(x) is discontinuous.  That suggests that
  as we use "better" and "better" quadrature rules, the
  volume estimate will actually get worse and worse.
 
  The user supplies the quadrature rule using three files,
  called the "R", "W" and "X" files:
  * the Mx2 R file contains the hyperrectangle of definition;
  * the Nx1 W file contains the weights.
  * the MxN X file contains the points.
 
User input:
  Quadrature rule X file = "cc_d6_level5_x.txt".
  Quadrature rule W file = "cc_d6_level5_w.txt".
  Quadrature rule R file = "cc_d6_level5_r.txt".
 
  Spatial dimension =        6
  Number of points  =     4865
 
         N    Estimate           Exact         Error
 
      4865    -24.6827         5.16771       29.8504    
 
HYPERBALL_VOLUME_QUAD:
  Normal end of execution.
 
 3 January 2014  12:09:13.799 PM
 3 January 2014  12:09:13.802 PM
 
HYPERBALL_VOLUME_QUAD
  FORTRAN90 version
  Use a quadrature rule, applied to the M-dimensional
  hypercube, to estimate the volume of the 
  M-dimensional unit hyperball.
 
  We are integrating the function f(x), where f(x) is
  * 1 inside the hyperball;
  * 0 outside the hyperball.
 
  The function f(x) is discontinuous.  That suggests that
  as we use "better" and "better" quadrature rules, the
  volume estimate will actually get worse and worse.
 
  The user supplies the quadrature rule using three files,
  called the "R", "W" and "X" files:
  * the Mx2 R file contains the hyperrectangle of definition;
  * the Nx1 W file contains the weights.
  * the MxN X file contains the points.
 
User input:
  Quadrature rule X file = "uniform_d6_00001a_x.txt".
  Quadrature rule W file = "uniform_d6_00001a_w.txt".
  Quadrature rule R file = "uniform_d6_00001a_r.txt".
 
  Spatial dimension =        6
  Number of points  =        1
 
         N    Estimate           Exact         Error
 
         1     0.00000         5.16771       5.16771    
 
HYPERBALL_VOLUME_QUAD:
  Normal end of execution.
 
 3 January 2014  12:09:13.848 PM
 3 January 2014  12:09:13.851 PM
 
HYPERBALL_VOLUME_QUAD
  FORTRAN90 version
  Use a quadrature rule, applied to the M-dimensional
  hypercube, to estimate the volume of the 
  M-dimensional unit hyperball.
 
  We are integrating the function f(x), where f(x) is
  * 1 inside the hyperball;
  * 0 outside the hyperball.
 
  The function f(x) is discontinuous.  That suggests that
  as we use "better" and "better" quadrature rules, the
  volume estimate will actually get worse and worse.
 
  The user supplies the quadrature rule using three files,
  called the "R", "W" and "X" files:
  * the Mx2 R file contains the hyperrectangle of definition;
  * the Nx1 W file contains the weights.
  * the MxN X file contains the points.
 
User input:
  Quadrature rule X file = "uniform_d6_00013a_x.txt".
  Quadrature rule W file = "uniform_d6_00013a_w.txt".
  Quadrature rule R file = "uniform_d6_00013a_r.txt".
 
  Spatial dimension =        6
  Number of points  =       13
 
         N    Estimate           Exact         Error
 
        13     0.00000         5.16771       5.16771    
 
HYPERBALL_VOLUME_QUAD:
  Normal end of execution.
 
 3 January 2014  12:09:13.891 PM
 3 January 2014  12:09:13.894 PM
 
HYPERBALL_VOLUME_QUAD
  FORTRAN90 version
  Use a quadrature rule, applied to the M-dimensional
  hypercube, to estimate the volume of the 
  M-dimensional unit hyperball.
 
  We are integrating the function f(x), where f(x) is
  * 1 inside the hyperball;
  * 0 outside the hyperball.
 
  The function f(x) is discontinuous.  That suggests that
  as we use "better" and "better" quadrature rules, the
  volume estimate will actually get worse and worse.
 
  The user supplies the quadrature rule using three files,
  called the "R", "W" and "X" files:
  * the Mx2 R file contains the hyperrectangle of definition;
  * the Nx1 W file contains the weights.
  * the MxN X file contains the points.
 
User input:
  Quadrature rule X file = "uniform_d6_00085a_x.txt".
  Quadrature rule W file = "uniform_d6_00085a_w.txt".
  Quadrature rule R file = "uniform_d6_00085a_r.txt".
 
  Spatial dimension =        6
  Number of points  =       85
 
         N    Estimate           Exact         Error
 
        85     3.01176         5.16771       2.15595    
 
HYPERBALL_VOLUME_QUAD:
  Normal end of execution.
 
 3 January 2014  12:09:13.918 PM
 3 January 2014  12:09:13.921 PM
 
HYPERBALL_VOLUME_QUAD
  FORTRAN90 version
  Use a quadrature rule, applied to the M-dimensional
  hypercube, to estimate the volume of the 
  M-dimensional unit hyperball.
 
  We are integrating the function f(x), where f(x) is
  * 1 inside the hyperball;
  * 0 outside the hyperball.
 
  The function f(x) is discontinuous.  That suggests that
  as we use "better" and "better" quadrature rules, the
  volume estimate will actually get worse and worse.
 
  The user supplies the quadrature rule using three files,
  called the "R", "W" and "X" files:
  * the Mx2 R file contains the hyperrectangle of definition;
  * the Nx1 W file contains the weights.
  * the MxN X file contains the points.
 
User input:
  Quadrature rule X file = "uniform_d6_00389a_x.txt".
  Quadrature rule W file = "uniform_d6_00389a_w.txt".
  Quadrature rule R file = "uniform_d6_00389a_r.txt".
 
  Spatial dimension =        6
  Number of points  =      389
 
         N    Estimate           Exact         Error
 
       389     4.77121         5.16771      0.396505    
 
HYPERBALL_VOLUME_QUAD:
  Normal end of execution.
 
 3 January 2014  12:09:13.951 PM
 3 January 2014  12:09:13.953 PM
 
HYPERBALL_VOLUME_QUAD
  FORTRAN90 version
  Use a quadrature rule, applied to the M-dimensional
  hypercube, to estimate the volume of the 
  M-dimensional unit hyperball.
 
  We are integrating the function f(x), where f(x) is
  * 1 inside the hyperball;
  * 0 outside the hyperball.
 
  The function f(x) is discontinuous.  That suggests that
  as we use "better" and "better" quadrature rules, the
  volume estimate will actually get worse and worse.
 
  The user supplies the quadrature rule using three files,
  called the "R", "W" and "X" files:
  * the Mx2 R file contains the hyperrectangle of definition;
  * the Nx1 W file contains the weights.
  * the MxN X file contains the points.
 
User input:
  Quadrature rule X file = "uniform_d6_01457a_x.txt".
  Quadrature rule W file = "uniform_d6_01457a_w.txt".
  Quadrature rule R file = "uniform_d6_01457a_r.txt".
 
  Spatial dimension =        6
  Number of points  =     1457
 
         N    Estimate           Exact         Error
 
      1457     5.18325         5.16771      0.155405E-01
 
HYPERBALL_VOLUME_QUAD:
  Normal end of execution.
 
 3 January 2014  12:09:14.017 PM
 3 January 2014  12:09:14.019 PM
 
HYPERBALL_VOLUME_QUAD
  FORTRAN90 version
  Use a quadrature rule, applied to the M-dimensional
  hypercube, to estimate the volume of the 
  M-dimensional unit hyperball.
 
  We are integrating the function f(x), where f(x) is
  * 1 inside the hyperball;
  * 0 outside the hyperball.
 
  The function f(x) is discontinuous.  That suggests that
  as we use "better" and "better" quadrature rules, the
  volume estimate will actually get worse and worse.
 
  The user supplies the quadrature rule using three files,
  called the "R", "W" and "X" files:
  * the Mx2 R file contains the hyperrectangle of definition;
  * the Nx1 W file contains the weights.
  * the MxN X file contains the points.
 
User input:
  Quadrature rule X file = "uniform_d6_04865a_x.txt".
  Quadrature rule W file = "uniform_d6_04865a_w.txt".
  Quadrature rule R file = "uniform_d6_04865a_r.txt".
 
  Spatial dimension =        6
  Number of points  =     4865
 
         N    Estimate           Exact         Error
 
      4865     5.41994         5.16771      0.252226    
 
HYPERBALL_VOLUME_QUAD:
  Normal end of execution.
 
 3 January 2014  12:09:14.117 PM
