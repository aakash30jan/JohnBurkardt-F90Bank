January 10 2011  12:05:57.924 PM
 
PBMLIB_PRB
  FORTRAN90 version
  Test the PBMLIB Library.
 
TEST01
  PBMA_EXAMPLE sets some example PBM data.
  PBMA_WRITE writes an ASCII PBM file.
 
  Wrote the header and data for "pbmlib.pbma".
  Number of rows of data =         200
  Number of columns of data =      200
 
TEST02
  For an ASCII PBM file,
  PBMA_READ_HEADER reads the header;
  PBMA_READ_DATA reads the data.
 
  Read the header and data from "pbmlib.pbma".
  Number of rows of data =         200
  Number of columns of data =      200
 
TEST03
  PGMA_EXAMPLE sets up sample PGM data.
  PGMA_WRITE writes an ASCII PGM file.
 
  Wrote the header and data for "pbmlib.pgma".
  Number of rows of data =         200
  Number of columns of data =      600
 
TEST04
  For an ASCII PGM file,
  PGMA_READ_HEADER reads the header;
  PGMA_READ_DATA reads the data.
 
  Read the header and data from "pbmlib.pgma".
  Number of rows of data =         200
  Number of columns of data =      600
 
TEST05
  PPM_EXAMPLE sets up sample PPM data.
  PPMA_WRITE writes an ASCII PPM file.
 
  Wrote the header and data for "pbmlib.ppma".
  Number of rows of data =         300
  Number of columns of data =      300
 
TEST06
  PPMA_READ reads an ASCII PPM file.
 
  Read the header and data from "pbmlib.ppma".
  Number of rows of data =         300
  Number of columns of data =      300
 
TEST07
  PBM_EXAMPLE sets some sample PBM data.
  PBMB_WRITE writes a binary PBM file.
 
  Wrote the header and data for "pbmlib.pbmb".
  Number of rows of data =         200
  Number of columns of data =      200
 
TEST08
  PBMB_READ reads a binary PBM file.
 
  Read the header and data from "pbmlib.pbmb".
  Number of rows of data =         200
  Number of columns of data =      200
 
TEST09
  PGMB_WRITE writes a binary PGM file.
 
  Wrote the header and data for "pbmlib.pgmb".
  Number of rows of data =         200
  Number of columns of data =      200
 
TEST10
  PGMB_READ reads a binary PGM file.
 
  Read the header and data from "pbmlib.pgmb".
  Number of rows of data =         200
  Number of columns of data =      200
 
TEST11
  PPM_EXAMPLE sets up sample PPM data.
  PPMB_WRITE writes a binary PPM file.
 
  Wrote the header and data for "pbmlib.ppmb".
  Number of rows of data =         300
  Number of columns of data =      300
 
TEST12
  PPMB_READ reads a binary PPM file.
 
  Read the header and data from "pbmlib.ppmb".
  Number of rows of data =         300
  Number of columns of data =      300
 
TEST13
  FONT_READ reads in a simple bit map font.
  1   33  !
  2   34  "
  3   35  #
  4   36  $
  5   37  %
  6   38  &
  7   39  '
  8   40  (
  9   41  )
 10   42  *
 11   43  +
 12   44  ,
 13   45  -
 14   46  .
 15   47  /
 16   48  0
 17   49  1
 18   50  2
 19   51  3
 20   52  4
 21   53  5
 22   54  6
 23   55  7
 24   56  8
 25   57  9
 26   58  :
 27   59  ;
 28   60  <
 29   61  =
 30   62  >
 31   63  ?
 32   64  @
 33   65  A
 34   66  B
 35   67  C
 36   68  D
 37   69  E
 38   70  F
 39   71  G
 40   72  H
 41   73  I
 42   74  J
 43   75  K
 44   76  L
 45   77  M
 46   78  N
 47   79  O
 48   80  P
 49   81  Q
 50   82  R
 51   83  S
 52   84  T
 53   85  U
 54   86  V
 55   87  W
 56   88  X
 57   89  Y
 58   90  Z
 59  123  {
 60   92  \
 61  125  }
 62   94  ^
 63   95  _
 64   96  `
 65   91  [
 66  124  |
 67   93  ]
 68  126  ~
 
TEST14
  FONT_PRINT prints the font we just read in.
 
Font entry for character !
ASCII number       33
 
  X  
  X  
  X  
  X  
  X  
     
  X  
 
Font entry for character "
ASCII number       34
 
 X X 
 X X 
     
     
     
     
     
 
Font entry for character #
ASCII number       35
 
     
 X X 
XXXXX
 X X 
XXXXX
 X X 
     
 
Font entry for character $
ASCII number       36
 
  X  
 XXX 
X X  
 XXX 
  X X
 XXX 
  X  
 
Font entry for character %
ASCII number       37
 
     
XX  X
XX X 
  X  
 X XX
X  XX
     
 
Font entry for character &
ASCII number       38
 
 XX  
X  X 
X    
 X   
X X X
X  X 
 XX X
 
Font entry for character '
ASCII number       39
 
   X 
  X  
     
     
     
     
     
 
Font entry for character (
ASCII number       40
 
  X  
 X   
X    
X    
X    
 X   
  X  
 
Font entry for character )
ASCII number       41
 
  X  
   X 
    X
    X
    X
   X 
  X  
 
Font entry for character *
ASCII number       42
 
  X  
X X X
 X X 
     
     
     
     
 
Font entry for character +
ASCII number       43
 
     
  X  
  X  
XXXXX
  X  
  X  
     
 
Font entry for character ,
ASCII number       44
 
     
     
     
     
     
 XX  
 X   
 
Font entry for character -
ASCII number       45
 
     
     
     
 XXX 
     
     
     
 
Font entry for character .
ASCII number       46
 
     
     
     
     
     
 XX  
 XX  
 
Font entry for character /
ASCII number       47
 
    X
    X
   X 
  X  
 X   
X    
X    
 
Font entry for character 0
ASCII number       48
 
 XXX 
X   X
X  XX
X X X
XX  X
X   X
 XXX 
 
Font entry for character 1
ASCII number       49
 
  X  
 XX  
  X  
  X  
  X  
  X  
  X  
 
Font entry for character 2
ASCII number       50
 
 XX  
X  X 
    X
   X 
  X  
 X   
XXXXX
 
Font entry for character 3
ASCII number       51
 
 XXX 
X   X
    X
  XXX
    X
X   X
 XXX 
 
Font entry for character 4
ASCII number       52
 
X   X
X   X
X   X
XXXXX
    X
    X
    X
 
Font entry for character 5
ASCII number       53
 
XXXXX
X    
X    
 XXX 
    X
X   X
 XXX 
 
Font entry for character 6
ASCII number       54
 
 X   
X    
X    
XXXX 
X   X
X   X
XXXX 
 
Font entry for character 7
ASCII number       55
 
XXXXX
    X
   X 
  X  
  X  
  X  
  X  
 
Font entry for character 8
ASCII number       56
 
 XXX 
X   X
X   X
 XXX 
X   X
X   X
 XXX 
 
Font entry for character 9
ASCII number       57
 
 XXX 
X   X
X   X
 XXXX
    X
X   X
 XXX 
 
Font entry for character :
ASCII number       58
 
     
     
     
  X  
     
  X  
     
 
Font entry for character ;
ASCII number       59
 
     
     
     
  X  
     
  X  
 X   
 
Font entry for character <
ASCII number       60
 
   X 
  X  
 X   
X    
 X   
  X  
   X 
 
Font entry for character =
ASCII number       61
 
     
     
XXXXX
     
XXXXX
     
     
 
Font entry for character >
ASCII number       62
 
X    
 X   
  X  
   X 
  X  
 X   
X    
 
Font entry for character ?
ASCII number       63
 
 XXX 
X   X
   X 
  X  
  X  
     
  X  
 
Font entry for character @
ASCII number       64
 
     
 XXX 
X XXX
XX  X
X XXX
X    
 XX  
 
Font entry for character A
ASCII number       65
 
  X  
 X X 
XX XX
X   X
XXXXX
X   X
X   X
 
Font entry for character B
ASCII number       66
 
XXXX 
X   X
X   X
XXXX 
X   X
X   X
XXXX 
 
Font entry for character C
ASCII number       67
 
 XXX 
X   X
X    
X    
X    
X   X
 XXX 
 
Font entry for character D
ASCII number       68
 
XXXX 
X   X
X   X
X   X
X   X
X   X
XXXX 
 
Font entry for character E
ASCII number       69
 
XXXXX
X    
X    
XXXX 
X    
X    
XXXXX
 
Font entry for character F
ASCII number       70
 
XXXXX
X    
X    
XXXX 
X    
X    
X    
 
Font entry for character G
ASCII number       71
 
 XXX 
X   X
X    
X    
X  XX
X   X
 XXX 
 
Font entry for character H
ASCII number       72
 
X   X
X   X
X   X
XXXXX
X   X
X   X
X   X
 
Font entry for character I
ASCII number       73
 
 XXX 
  X  
  X  
  X  
  X  
  X  
 XXX 
 
Font entry for character J
ASCII number       74
 
XXXXX
  X  
  X  
  X  
  X  
X X  
 X   
 
Font entry for character K
ASCII number       75
 
X   X
X  X 
X X  
X    
X X  
X  X 
X   X
 
Font entry for character L
ASCII number       76
 
X    
X    
X    
X    
X    
X    
XXXXX
 
Font entry for character M
ASCII number       77
 
XX XX
XX XX
X X X
X X X
X   X
X   X
X   X
 
Font entry for character N
ASCII number       78
 
XX  X
XX  X
X X X
X X X
X X X
X  XX
X  XX
 
Font entry for character O
ASCII number       79
 
 XXX 
X   X
X   X
X   X
X   X
X   X
 XXX 
 
Font entry for character P
ASCII number       80
 
XXXX 
X   X
X   X
XXXX 
X    
X    
X    
 
Font entry for character Q
ASCII number       81
 
 XXX 
X   X
X   X
X   X
X X X
X  X 
 XX X
 
Font entry for character R
ASCII number       82
 
XXXX 
X   X
X   X
XXXX 
X X  
X  X 
X   X
 
Font entry for character S
ASCII number       83
 
 XXX 
X   X
X    
 XXX 
    X
X   X
 XXX 
 
Font entry for character T
ASCII number       84
 
XXXXX
  X  
  X  
  X  
  X  
  X  
  X  
 
Font entry for character U
ASCII number       85
 
X   X
X   X
X   X
X   X
X   X
X   X
 XXX 
 
Font entry for character V
ASCII number       86
 
X   X
X   X
X   X
 X X 
 X X 
 X X 
  X  
 
Font entry for character W
ASCII number       87
 
X   X
X   X
X X X
X X X
XXXXX
 XXX 
 X X 
 
Font entry for character X
ASCII number       88
 
X   X
X   X
 X X 
  X  
 X X 
X   X
X   X
 
Font entry for character Y
ASCII number       89
 
X   X
X   X
 X X 
  X  
  X  
  X  
  X  
 
Font entry for character Z
ASCII number       90
 
XXXXX
    X
   X 
  X  
 X   
X    
XXXXX
 
Font entry for character [
ASCII number       91
 
XXX  
X    
X    
X    
X    
X    
XXX  
 
Font entry for character \
ASCII number       92
 
X    
X    
 X   
  X  
   X 
    X
    X
 
Font entry for character ]
ASCII number       93
 
  XXX
    X
    X
    X
    X
    X
  XXX
 
Font entry for character ^
ASCII number       94
 
  X  
 X X 
X   X
     
     
     
     
 
Font entry for character _
ASCII number       95
 
     
     
     
     
     
     
XXXXX
 
Font entry for character `
ASCII number       96
 
 X   
  X  
     
     
     
     
     
 
Font entry for character {
ASCII number      123
 
  XX 
 X   
 X   
X    
 X   
 X   
  XX 
 
Font entry for character |
ASCII number      124
 
  X  
  X  
  X  
     
  X  
  X  
  X  
 
Font entry for character }
ASCII number      125
 
 XX  
   X 
   X 
    X
   X 
   X 
 XX  
 
Font entry for character ~
ASCII number      126
 
     
 XX X
X  X 
     
     
     
     
 
TEST15
  FONT_DATA prints out a font data statement.
!
!  IPOINT(I) is:
!    0, if character I is not here,
!    J, if character I is in BITS(*,*,J).
!
  integer ( kind = 4 ), parameter, dimension (0:255) :: ipoint = (/ &
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, &
    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, &
   16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, &
   32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, &
   48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 60, 67, 62, 63, &
   64,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 59, 66, 61, 68,  0, &
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 /)
 
  integer ( kind = 4 ) bits( 7, 5, 68)
 
  data ((bits(i,j, 1), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0, &
    1,  1,  1,  1,  1,  0,  1, &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 2), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  0,  0,  0,  0,  0, &
    1,  1,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0, &
    1,  1,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 3), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  1,  0,  1,  0,  0, &
    0,  1,  1,  1,  1,  1,  0, &
    0,  0,  1,  0,  1,  0,  0, &
    0,  1,  1,  1,  1,  1,  0, &
    0,  0,  1,  0,  1,  0,  0 /
 
  data ((bits(i,j, 4), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  1,  0,  0,  0,  0, &
    0,  1,  0,  1,  0,  1,  0, &
    1,  1,  1,  1,  1,  1,  1, &
    0,  1,  0,  1,  0,  1,  0, &
    0,  0,  0,  0,  1,  0,  0 /
 
  data ((bits(i,j, 5), i = 1, 7 ), j = 1, 5 ) / &
    0,  1,  1,  0,  0,  1,  0, &
    0,  1,  1,  0,  1,  0,  0, &
    0,  0,  0,  1,  0,  0,  0, &
    0,  0,  1,  0,  1,  1,  0, &
    0,  1,  0,  0,  1,  1,  0 /
 
  data ((bits(i,j, 6), i = 1, 7 ), j = 1, 5 ) / &
    0,  1,  1,  0,  1,  1,  0, &
    1,  0,  0,  1,  0,  0,  1, &
    1,  0,  0,  0,  1,  0,  1, &
    0,  1,  0,  0,  0,  1,  0, &
    0,  0,  0,  0,  1,  0,  1 /
 
  data ((bits(i,j, 7), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0, &
    0,  1,  0,  0,  0,  0,  0, &
    1,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 8), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  1,  1,  1,  0,  0, &
    0,  1,  0,  0,  0,  1,  0, &
    1,  0,  0,  0,  0,  0,  1, &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 9), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0, &
    1,  0,  0,  0,  0,  0,  1, &
    0,  1,  0,  0,  0,  1,  0, &
    0,  0,  1,  1,  1,  0,  0 /
 
  data ((bits(i,j, 10), i = 1, 7 ), j = 1, 5 ) / &
    0,  1,  0,  0,  0,  0,  0, &
    0,  0,  1,  0,  0,  0,  0, &
    1,  1,  0,  0,  0,  0,  0, &
    0,  0,  1,  0,  0,  0,  0, &
    0,  1,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 11), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  0,  1,  0,  0,  0, &
    0,  0,  0,  1,  0,  0,  0, &
    0,  1,  1,  1,  1,  1,  0, &
    0,  0,  0,  1,  0,  0,  0, &
    0,  0,  0,  1,  0,  0,  0 /
 
  data ((bits(i,j, 12), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  1,  1, &
    0,  0,  0,  0,  0,  1,  0, &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 13), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  1,  0,  0,  0, &
    0,  0,  0,  1,  0,  0,  0, &
    0,  0,  0,  1,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 14), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  1,  1, &
    0,  0,  0,  0,  0,  1,  1, &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 15), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  0,  0,  0,  1,  1, &
    0,  0,  0,  0,  1,  0,  0, &
    0,  0,  0,  1,  0,  0,  0, &
    0,  0,  1,  0,  0,  0,  0, &
    1,  1,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 16), i = 1, 7 ), j = 1, 5 ) / &
    0,  1,  1,  1,  1,  1,  0, &
    1,  0,  0,  0,  1,  0,  1, &
    1,  0,  0,  1,  0,  0,  1, &
    1,  0,  1,  0,  0,  0,  1, &
    0,  1,  1,  1,  1,  1,  0 /
 
  data ((bits(i,j, 17), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  0,  0,  0,  0,  0, &
    0,  1,  0,  0,  0,  0,  0, &
    1,  1,  1,  1,  1,  1,  1, &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 18), i = 1, 7 ), j = 1, 5 ) / &
    0,  1,  0,  0,  0,  0,  1, &
    1,  0,  0,  0,  0,  1,  1, &
    1,  0,  0,  0,  1,  0,  1, &
    0,  1,  0,  1,  0,  0,  1, &
    0,  0,  1,  0,  0,  0,  1 /
 
  data ((bits(i,j, 19), i = 1, 7 ), j = 1, 5 ) / &
    0,  1,  0,  0,  0,  1,  0, &
    1,  0,  0,  0,  0,  0,  1, &
    1,  0,  0,  1,  0,  0,  1, &
    1,  0,  0,  1,  0,  0,  1, &
    0,  1,  1,  1,  1,  1,  0 /
 
  data ((bits(i,j, 20), i = 1, 7 ), j = 1, 5 ) / &
    1,  1,  1,  1,  0,  0,  0, &
    0,  0,  0,  1,  0,  0,  0, &
    0,  0,  0,  1,  0,  0,  0, &
    0,  0,  0,  1,  0,  0,  0, &
    1,  1,  1,  1,  1,  1,  1 /
 
  data ((bits(i,j, 21), i = 1, 7 ), j = 1, 5 ) / &
    1,  1,  1,  0,  0,  1,  0, &
    1,  0,  0,  1,  0,  0,  1, &
    1,  0,  0,  1,  0,  0,  1, &
    1,  0,  0,  1,  0,  0,  1, &
    1,  0,  0,  0,  1,  1,  0 /
 
  data ((bits(i,j, 22), i = 1, 7 ), j = 1, 5 ) / &
    0,  1,  1,  1,  1,  1,  1, &
    1,  0,  0,  1,  0,  0,  1, &
    0,  0,  0,  1,  0,  0,  1, &
    0,  0,  0,  1,  0,  0,  1, &
    0,  0,  0,  0,  1,  1,  0 /
 
  data ((bits(i,j, 23), i = 1, 7 ), j = 1, 5 ) / &
    1,  0,  0,  0,  0,  0,  0, &
    1,  0,  0,  0,  0,  0,  0, &
    1,  0,  0,  1,  1,  1,  1, &
    1,  0,  1,  0,  0,  0,  0, &
    1,  1,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 24), i = 1, 7 ), j = 1, 5 ) / &
    0,  1,  1,  0,  1,  1,  0, &
    1,  0,  0,  1,  0,  0,  1, &
    1,  0,  0,  1,  0,  0,  1, &
    1,  0,  0,  1,  0,  0,  1, &
    0,  1,  1,  0,  1,  1,  0 /
 
  data ((bits(i,j, 25), i = 1, 7 ), j = 1, 5 ) / &
    0,  1,  1,  0,  0,  1,  0, &
    1,  0,  0,  1,  0,  0,  1, &
    1,  0,  0,  1,  0,  0,  1, &
    1,  0,  0,  1,  0,  0,  1, &
    0,  1,  1,  1,  1,  1,  0 /
 
  data ((bits(i,j, 26), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  1,  0,  1,  0, &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 27), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  1, &
    0,  0,  0,  1,  0,  1,  0, &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 28), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  0,  1,  0,  0,  0, &
    0,  0,  1,  0,  1,  0,  0, &
    0,  1,  0,  0,  0,  1,  0, &
    1,  0,  0,  0,  0,  0,  1, &
    0,  0,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 29), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  1,  0,  1,  0,  0, &
    0,  0,  1,  0,  1,  0,  0, &
    0,  0,  1,  0,  1,  0,  0, &
    0,  0,  1,  0,  1,  0,  0, &
    0,  0,  1,  0,  1,  0,  0 /
 
  data ((bits(i,j, 30), i = 1, 7 ), j = 1, 5 ) / &
    1,  0,  0,  0,  0,  0,  1, &
    0,  1,  0,  0,  0,  1,  0, &
    0,  0,  1,  0,  1,  0,  0, &
    0,  0,  0,  1,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 31), i = 1, 7 ), j = 1, 5 ) / &
    0,  1,  0,  0,  0,  0,  0, &
    1,  0,  0,  0,  0,  0,  0, &
    1,  0,  0,  1,  1,  0,  1, &
    1,  0,  1,  0,  0,  0,  0, &
    0,  1,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 32), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  1,  1,  1,  1,  0, &
    0,  1,  0,  1,  0,  0,  1, &
    0,  1,  1,  0,  1,  0,  1, &
    0,  1,  1,  0,  1,  0,  0, &
    0,  0,  1,  1,  1,  0,  0 /
 
  data ((bits(i,j, 33), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  1,  1,  1,  1,  1, &
    0,  1,  1,  0,  1,  0,  0, &
    1,  0,  0,  0,  1,  0,  0, &
    0,  1,  1,  0,  1,  0,  0, &
    0,  0,  1,  1,  1,  1,  1 /
 
  data ((bits(i,j, 34), i = 1, 7 ), j = 1, 5 ) / &
    1,  1,  1,  1,  1,  1,  1, &
    1,  0,  0,  1,  0,  0,  1, &
    1,  0,  0,  1,  0,  0,  1, &
    1,  0,  0,  1,  0,  0,  1, &
    0,  1,  1,  0,  1,  1,  0 /
 
  data ((bits(i,j, 35), i = 1, 7 ), j = 1, 5 ) / &
    0,  1,  1,  1,  1,  1,  0, &
    1,  0,  0,  0,  0,  0,  1, &
    1,  0,  0,  0,  0,  0,  1, &
    1,  0,  0,  0,  0,  0,  1, &
    0,  1,  0,  0,  0,  1,  0 /
 
  data ((bits(i,j, 36), i = 1, 7 ), j = 1, 5 ) / &
    1,  1,  1,  1,  1,  1,  1, &
    1,  0,  0,  0,  0,  0,  1, &
    1,  0,  0,  0,  0,  0,  1, &
    1,  0,  0,  0,  0,  0,  1, &
    0,  1,  1,  1,  1,  1,  0 /
 
  data ((bits(i,j, 37), i = 1, 7 ), j = 1, 5 ) / &
    1,  1,  1,  1,  1,  1,  1, &
    1,  0,  0,  1,  0,  0,  1, &
    1,  0,  0,  1,  0,  0,  1, &
    1,  0,  0,  1,  0,  0,  1, &
    1,  0,  0,  0,  0,  0,  1 /
 
  data ((bits(i,j, 38), i = 1, 7 ), j = 1, 5 ) / &
    1,  1,  1,  1,  1,  1,  1, &
    1,  0,  0,  1,  0,  0,  0, &
    1,  0,  0,  1,  0,  0,  0, &
    1,  0,  0,  1,  0,  0,  0, &
    1,  0,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 39), i = 1, 7 ), j = 1, 5 ) / &
    0,  1,  1,  1,  1,  1,  0, &
    1,  0,  0,  0,  0,  0,  1, &
    1,  0,  0,  0,  0,  0,  1, &
    1,  0,  0,  0,  1,  0,  1, &
    0,  1,  0,  0,  1,  1,  0 /
 
  data ((bits(i,j, 40), i = 1, 7 ), j = 1, 5 ) / &
    1,  1,  1,  1,  1,  1,  1, &
    0,  0,  0,  1,  0,  0,  0, &
    0,  0,  0,  1,  0,  0,  0, &
    0,  0,  0,  1,  0,  0,  0, &
    1,  1,  1,  1,  1,  1,  1 /
 
  data ((bits(i,j, 41), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  0,  0,  0,  0,  0, &
    1,  0,  0,  0,  0,  0,  1, &
    1,  1,  1,  1,  1,  1,  1, &
    1,  0,  0,  0,  0,  0,  1, &
    0,  0,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 42), i = 1, 7 ), j = 1, 5 ) / &
    1,  0,  0,  0,  0,  1,  0, &
    1,  0,  0,  0,  0,  0,  1, &
    1,  1,  1,  1,  1,  1,  0, &
    1,  0,  0,  0,  0,  0,  0, &
    1,  0,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 43), i = 1, 7 ), j = 1, 5 ) / &
    1,  1,  1,  1,  1,  1,  1, &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  1,  0,  1,  0,  0, &
    0,  1,  0,  0,  0,  1,  0, &
    1,  0,  0,  0,  0,  0,  1 /
 
  data ((bits(i,j, 44), i = 1, 7 ), j = 1, 5 ) / &
    1,  1,  1,  1,  1,  1,  1, &
    0,  0,  0,  0,  0,  0,  1, &
    0,  0,  0,  0,  0,  0,  1, &
    0,  0,  0,  0,  0,  0,  1, &
    0,  0,  0,  0,  0,  0,  1 /
 
  data ((bits(i,j, 45), i = 1, 7 ), j = 1, 5 ) / &
    1,  1,  1,  1,  1,  1,  1, &
    1,  1,  0,  0,  0,  0,  0, &
    0,  0,  1,  1,  0,  0,  0, &
    1,  1,  0,  0,  0,  0,  0, &
    1,  1,  1,  1,  1,  1,  1 /
 
  data ((bits(i,j, 46), i = 1, 7 ), j = 1, 5 ) / &
    1,  1,  1,  1,  1,  1,  1, &
    1,  1,  0,  0,  0,  0,  0, &
    0,  0,  1,  1,  1,  0,  0, &
    0,  0,  0,  0,  0,  1,  1, &
    1,  1,  1,  1,  1,  1,  1 /
 
  data ((bits(i,j, 47), i = 1, 7 ), j = 1, 5 ) / &
    0,  1,  1,  1,  1,  1,  0, &
    1,  0,  0,  0,  0,  0,  1, &
    1,  0,  0,  0,  0,  0,  1, &
    1,  0,  0,  0,  0,  0,  1, &
    0,  1,  1,  1,  1,  1,  0 /
 
  data ((bits(i,j, 48), i = 1, 7 ), j = 1, 5 ) / &
    1,  1,  1,  1,  1,  1,  1, &
    1,  0,  0,  1,  0,  0,  0, &
    1,  0,  0,  1,  0,  0,  0, &
    1,  0,  0,  1,  0,  0,  0, &
    0,  1,  1,  0,  0,  0,  0 /
 
  data ((bits(i,j, 49), i = 1, 7 ), j = 1, 5 ) / &
    0,  1,  1,  1,  1,  1,  0, &
    1,  0,  0,  0,  0,  0,  1, &
    1,  0,  0,  0,  1,  0,  1, &
    1,  0,  0,  0,  0,  1,  0, &
    0,  1,  1,  1,  1,  0,  1 /
 
  data ((bits(i,j, 50), i = 1, 7 ), j = 1, 5 ) / &
    1,  1,  1,  1,  1,  1,  1, &
    1,  0,  0,  1,  0,  0,  0, &
    1,  0,  0,  1,  1,  0,  0, &
    1,  0,  0,  1,  0,  1,  0, &
    0,  1,  1,  0,  0,  0,  1 /
 
  data ((bits(i,j, 51), i = 1, 7 ), j = 1, 5 ) / &
    0,  1,  1,  0,  0,  1,  0, &
    1,  0,  0,  1,  0,  0,  1, &
    1,  0,  0,  1,  0,  0,  1, &
    1,  0,  0,  1,  0,  0,  1, &
    0,  1,  0,  0,  1,  1,  0 /
 
  data ((bits(i,j, 52), i = 1, 7 ), j = 1, 5 ) / &
    1,  0,  0,  0,  0,  0,  0, &
    1,  0,  0,  0,  0,  0,  0, &
    1,  1,  1,  1,  1,  1,  1, &
    1,  0,  0,  0,  0,  0,  0, &
    1,  0,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 53), i = 1, 7 ), j = 1, 5 ) / &
    1,  1,  1,  1,  1,  1,  0, &
    0,  0,  0,  0,  0,  0,  1, &
    0,  0,  0,  0,  0,  0,  1, &
    0,  0,  0,  0,  0,  0,  1, &
    1,  1,  1,  1,  1,  1,  0 /
 
  data ((bits(i,j, 54), i = 1, 7 ), j = 1, 5 ) / &
    1,  1,  1,  0,  0,  0,  0, &
    0,  0,  0,  1,  1,  1,  0, &
    0,  0,  0,  0,  0,  0,  1, &
    0,  0,  0,  1,  1,  1,  0, &
    1,  1,  1,  0,  0,  0,  0 /
 
  data ((bits(i,j, 55), i = 1, 7 ), j = 1, 5 ) / &
    1,  1,  1,  1,  1,  0,  0, &
    0,  0,  0,  0,  1,  1,  1, &
    0,  0,  1,  1,  1,  1,  0, &
    0,  0,  0,  0,  1,  1,  1, &
    1,  1,  1,  1,  1,  0,  0 /
 
  data ((bits(i,j, 56), i = 1, 7 ), j = 1, 5 ) / &
    1,  1,  0,  0,  0,  1,  1, &
    0,  0,  1,  0,  1,  0,  0, &
    0,  0,  0,  1,  0,  0,  0, &
    0,  0,  1,  0,  1,  0,  0, &
    1,  1,  0,  0,  0,  1,  1 /
 
  data ((bits(i,j, 57), i = 1, 7 ), j = 1, 5 ) / &
    1,  1,  0,  0,  0,  0,  0, &
    0,  0,  1,  0,  0,  0,  0, &
    0,  0,  0,  1,  1,  1,  1, &
    0,  0,  1,  0,  0,  0,  0, &
    1,  1,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 58), i = 1, 7 ), j = 1, 5 ) / &
    1,  0,  0,  0,  0,  1,  1, &
    1,  0,  0,  0,  1,  0,  1, &
    1,  0,  0,  1,  0,  0,  1, &
    1,  0,  1,  0,  0,  0,  1, &
    1,  1,  0,  0,  0,  0,  1 /
 
  data ((bits(i,j, 59), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  0,  1,  0,  0,  0, &
    0,  1,  1,  0,  1,  1,  0, &
    1,  0,  0,  0,  0,  0,  1, &
    1,  0,  0,  0,  0,  0,  1, &
    0,  0,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 60), i = 1, 7 ), j = 1, 5 ) / &
    1,  1,  0,  0,  0,  0,  0, &
    0,  0,  1,  0,  0,  0,  0, &
    0,  0,  0,  1,  0,  0,  0, &
    0,  0,  0,  0,  1,  0,  0, &
    0,  0,  0,  0,  0,  1,  1 /
 
  data ((bits(i,j, 61), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  0,  0,  0,  0,  0, &
    1,  0,  0,  0,  0,  0,  1, &
    1,  0,  0,  0,  0,  0,  1, &
    0,  1,  1,  0,  1,  1,  0, &
    0,  0,  0,  1,  0,  0,  0 /
 
  data ((bits(i,j, 62), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  1,  0,  0,  0,  0, &
    0,  1,  0,  0,  0,  0,  0, &
    1,  0,  0,  0,  0,  0,  0, &
    0,  1,  0,  0,  0,  0,  0, &
    0,  0,  1,  0,  0,  0,  0 /
 
  data ((bits(i,j, 63), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  0,  0,  0,  0,  1, &
    0,  0,  0,  0,  0,  0,  1, &
    0,  0,  0,  0,  0,  0,  1, &
    0,  0,  0,  0,  0,  0,  1, &
    0,  0,  0,  0,  0,  0,  1 /
 
  data ((bits(i,j, 64), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  0,  0,  0,  0,  0, &
    1,  0,  0,  0,  0,  0,  0, &
    0,  1,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 65), i = 1, 7 ), j = 1, 5 ) / &
    1,  1,  1,  1,  1,  1,  1, &
    1,  0,  0,  0,  0,  0,  1, &
    1,  0,  0,  0,  0,  0,  1, &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 66), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0, &
    1,  1,  1,  0,  1,  1,  1, &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0 /
 
  data ((bits(i,j, 67), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  0,  0,  0,  0,  0, &
    0,  0,  0,  0,  0,  0,  0, &
    1,  0,  0,  0,  0,  0,  1, &
    1,  0,  0,  0,  0,  0,  1, &
    1,  1,  1,  1,  1,  1,  1 /
 
  data ((bits(i,j, 68), i = 1, 7 ), j = 1, 5 ) / &
    0,  0,  1,  0,  0,  0,  0, &
    0,  1,  0,  0,  0,  0,  0, &
    0,  1,  0,  0,  0,  0,  0, &
    0,  0,  1,  0,  0,  0,  0, &
    0,  1,  0,  0,  0,  0,  0 /
 
TEST16
  BITCHR75 returns a 7 x 5 representation of
    SOME characters.
 
Character       32 is " "
 
     
     
     
     
     
     
     
 
Character       33 is "!"
 
  *  
  *  
  *  
  *  
  *  
     
  *  
 
Character       34 is """
 
 * * 
 * * 
     
     
     
     
     
 
Character       35 is "#"
 
     
 * * 
*****
 * * 
*****
 * * 
     
 
Character       36 is "$"
 
  *  
 *** 
* *  
 *** 
  * *
 *** 
  *  
 
Character       37 is "%"
 
     
**  *
** * 
  *  
 * **
*  **
     
 
Character       38 is "&"
 
 **  
*  * 
*    
 *   
* * *
*  * 
 ** *
 
Character       39 is "'"
 
   * 
  *  
     
     
     
     
     
 
Character       40 is "("
 
  *  
 *   
*    
*    
*    
 *   
  *  
 
Character       41 is ")"
 
  *  
   * 
    *
    *
    *
   * 
  *  
 
Character       42 is "*"
 
  *  
* * *
 * * 
     
     
     
     
 
Character       43 is "+"
 
     
  *  
  *  
*****
  *  
  *  
     
 
Character       44 is ","
 
     
     
     
     
     
 **  
 *   
 
Character       45 is "-"
 
     
     
     
 *** 
     
     
     
 
Character       46 is "."
 
     
     
     
     
     
 **  
 **  
 
Character       47 is "/"
 
    *
    *
   * 
  *  
 *   
*    
*    
 
Character       48 is "0"
 
 *** 
*   *
*  **
* * *
**  *
*   *
 *** 
 
Character       49 is "1"
 
  *  
 **  
  *  
  *  
  *  
  *  
  *  
 
Character       50 is "2"
 
 **  
*  * 
    *
   * 
  *  
 *   
*****
 
Character       51 is "3"
 
 *** 
*   *
    *
  ***
    *
*   *
 *** 
 
Character       52 is "4"
 
*   *
*   *
*   *
*****
    *
    *
    *
 
Character       53 is "5"
 
*****
*    
*    
 *** 
    *
*   *
 *** 
 
Character       54 is "6"
 
 *   
*    
*    
**** 
*   *
*   *
**** 
 
Character       55 is "7"
 
*****
    *
   * 
  *  
  *  
  *  
  *  
 
Character       56 is "8"
 
 *** 
*   *
*   *
 *** 
*   *
*   *
 *** 
 
Character       57 is "9"
 
 *** 
*   *
*   *
 ****
    *
*   *
 *** 
 
Character       58 is ":"
 
     
     
     
  *  
     
  *  
     
 
Character       59 is ";"
 
     
     
     
  *  
     
  *  
 *   
 
Character       60 is "<"
 
   * 
  *  
 *   
*    
 *   
  *  
   * 
 
Character       61 is "="
 
     
     
*****
     
*****
     
     
 
Character       62 is ">"
 
*    
 *   
  *  
   * 
  *  
 *   
*    
 
Character       63 is "?"
 
 *** 
*   *
   * 
  *  
  *  
     
  *  
 
Character       64 is "@"
 
     
 *** 
* ***
**  *
* ***
*    
 **  
 
Character       65 is "A"
 
  *  
 * * 
** **
*   *
*****
*   *
*   *
 
Character       66 is "B"
 
**** 
*   *
*   *
**** 
*   *
*   *
**** 
 
Character       67 is "C"
 
 *** 
*   *
*    
*    
*    
*   *
 *** 
 
Character       68 is "D"
 
**** 
*   *
*   *
*   *
*   *
*   *
**** 
 
Character       69 is "E"
 
*****
*    
*    
**** 
*    
*    
*****
 
Character       70 is "F"
 
*****
*    
*    
**** 
*    
*    
*    
 
Character       71 is "G"
 
 *** 
*   *
*    
*    
*  **
*   *
 *** 
 
Character       72 is "H"
 
*   *
*   *
*   *
*****
*   *
*   *
*   *
 
Character       73 is "I"
 
 *** 
  *  
  *  
  *  
  *  
  *  
 *** 
 
Character       74 is "J"
 
*****
  *  
  *  
  *  
  *  
* *  
 *   
 
Character       75 is "K"
 
*   *
*  * 
* *  
*    
* *  
*  * 
*   *
 
Character       76 is "L"
 
*    
*    
*    
*    
*    
*    
*****
 
Character       77 is "M"
 
** **
** **
* * *
* * *
*   *
*   *
*   *
 
Character       78 is "N"
 
**  *
**  *
* * *
* * *
* * *
*  **
*  **
 
Character       79 is "O"
 
 *** 
*   *
*   *
*   *
*   *
*   *
 *** 
 
Character       80 is "P"
 
**** 
*   *
*   *
**** 
*    
*    
*    
 
Character       81 is "Q"
 
 *** 
*   *
*   *
*   *
* * *
*  * 
 ** *
 
Character       82 is "R"
 
**** 
*   *
*   *
**** 
* *  
*  * 
*   *
 
Character       83 is "S"
 
 *** 
*   *
*    
 *** 
    *
*   *
 *** 
 
Character       84 is "T"
 
*****
  *  
  *  
  *  
  *  
  *  
  *  
 
Character       85 is "U"
 
*   *
*   *
*   *
*   *
*   *
*   *
 *** 
 
Character       86 is "V"
 
*   *
*   *
*   *
 * * 
 * * 
 * * 
  *  
 
Character       87 is "W"
 
*   *
*   *
* * *
* * *
*****
 *** 
 * * 
 
Character       88 is "X"
 
*   *
*   *
 * * 
  *  
 * * 
*   *
*   *
 
Character       89 is "Y"
 
*   *
*   *
 * * 
  *  
  *  
  *  
  *  
 
Character       90 is "Z"
 
*****
    *
   * 
  *  
 *   
*    
*****
 
Character       91 is "["
 
***  
*    
*    
*    
*    
*    
***  
 
Character       92 is "\"
 
*    
*    
 *   
  *  
   * 
    *
    *
 
Character       93 is "]"
 
  ***
    *
    *
    *
    *
    *
  ***
 
Character       94 is "^"
 
  *  
 * * 
*   *
     
     
     
     
 
Character       95 is "_"
 
     
     
     
     
     
     
*****
 
Character       96 is "`"
 
 *   
  *  
     
     
     
     
     
 
TEST17
  PPMB_WRITE writes a PPMB file.
  This displays the basins of attraction for
  Newton's method applied to a particular
  nonlinear equation in the complex plane.
 
  The equation is Z^3 = -1, which has three roots.
 
  ROOT1 =   0.500000      0.866025    
  ROOT2 =   -1.00000      0.122465E-15
  ROOT3 =   0.500000     -0.866025    
 
TEST18
  PPMA_WRITE writes an ASCII PPM file.
 
PBMLIB_PRB
  Normal end of execution.
 
January 10 2011  12:05:59.538 PM
